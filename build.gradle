plugins {
    id 'java'
    id 'maven-publish'
    id 'application'
    id 'war'
    id 'io.freefair.lombok' version '8.0.1'
    id 'org.flywaydb.flyway' version '9.14.1'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.gretty' version '4.0.3'
}

group 'net.mediaheap'
version '1.0-SNAPSHOT'

tasks.withType(JavaCompile).configureEach {
    options.release.set(17)
}

application {
    mainClass = 'net.mediaheap.Main'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
    implementation group: 'com.google.inject', name: 'guice', version: '5.1.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    implementation group: 'com.google.flogger', name: 'flogger', version: '0.7.4'
    implementation group: 'com.google.flogger', name: 'flogger-slf4j-backend', version: '0.7.4'

    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.40.1.0'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.14.1'

    implementation group: 'net.jthink', name: 'jaudiotagger', version: '3.0.1'

    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.4.5'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.5'

    implementation group: 'net.sourceforge.argparse4j', name: 'argparse4j', version: '0.9.0'

    implementation group: 'org.overviewproject', name: 'mime-types', version: '1.0.4'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'net.mediaheap'
            artifactId = 'mediaheap-java'
            version = '1.0-SNAPSHOT'

            from components.java

            artifact distZip
        }
    }
    repositories {
        maven {
            name = "github"
            url = "https://maven.pkg.github.com/piperswe/mediaheap-java"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

flyway {
    url = "jdbc:sqlite:${System.getProperty('user.dir')}/mediaheap.sqlite"
    locations = ["classpath:net/mediaheap/database/migrations"]
}